"""
Django settings for heron project.

Generated by 'django-admin startproject' using Django 1.11.29.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import os
import sys
from pathlib import Path
from unipath import Path as UniPath

from decouple import Csv, AutoConfig
from django.utils.translation import gettext_lazy as _

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.realpath(__file__))
ROOT_DIR = os.path.dirname(PROJECT_DIR)
APPS_DIR = os.path.realpath(os.path.join(BASE_DIR, "apps"))
CORE_DIR = os.path.realpath(os.path.join(APPS_DIR, "core"))

sys.path.append(BASE_DIR)
sys.path.append(PROJECT_DIR)
sys.path.append(ROOT_DIR)
sys.path.append(APPS_DIR)
sys.path.append(CORE_DIR)

path_env = Path(str(ROOT_DIR)) / "env/.env"
config = AutoConfig(search_path=path_env)

SECRET_KEY = config("SECRET_KEY")

EMAIL_HOST = config("EMAIL_HOST", default="localhost")
EMAIL_PORT = config("EMAIL_PORT", default=25, cast=int)
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default="admin@asipsante.fr")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default=None)
EMAIL_USE_SSL = config("EMAIL_USE_SSL", default=True, cast=bool)
EMAIL_USE_TLS = config("EMAIL_USE_TLS", default=False, cast=bool)

EMAIL_DEV = config("EMAIL_HOST_USER", default="admin@asipsante.fr")
DEFAULT_FROM_EMAIL = config("DEFAULT_FROM_EMAIL", default="admin@asipsante.fr")

ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv())

WHITELIST = config("ALLOWED_HOSTS", cast=Csv())

# Application definition
DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.humanize",
]

THIRD_PARTY_APPS = [
    "rest_framework",
    "rest_framework.authtoken",
    "django_filters",
    "django_extensions",
    "crispy_forms",
    "crispy_forms_semantic_ui",
    "axes",
    "ckeditor",
    "chartjs",
]

LOCAL_APPS = [
    "heron",
    "countries",
    "divers",
    "parameters",
    "periods",
    "users",
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "heron.middlewares.redirect_middleware.auth_redirect",
]

ROOT_URLCONF = "heron.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.realpath(os.path.join(ROOT_DIR, "templates")),
            os.path.realpath(os.path.join(CORE_DIR, "templates")),
            os.path.realpath(os.path.join(BASE_DIR, "heron/templates/heron")),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "heron.processors.title",
                "heron.processors.user_group",
                "heron.processors.groups_processor",
                "heron.processors.groupes_processor",
                "heron.processors.date_du_jour",
                "heron.processors.annee_du_jour",
                "heron.processors.debug",
                "heron.processors.domain_site_processor",
            ]
        },
    }
]

WSGI_APPLICATION = "heron.wsgi.application"

MYSQL_FILE_CONF = Path(str(UniPath(__file__).ancestor(2))) / ".ignore/mysql.conf"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "OPTIONS": {
            "read_default_file": str(MYSQL_FILE_CONF),
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {"min_length": 12},
    },
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

AUTH_USER_MODEL = "users.User"

# GESTION DES SESSION
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# SESSION_COOKIE_AGE = 600
# SESSION_SAVE_EVERY_REQUEST = True

SITE_ID = 1

LANGUAGE_CODE = "fr-FR"
LANGUAGES = [("fr", _("French"))]
TIME_ZONE = "Europe/Paris"
SHORT_DATE_FORMAT = "d/m/Y"
DATE_FORMAT = "d/m/Y"
DATE_INPUT_FORMATS = [
    "%d-%m-%Y",
    "%d/%m/%Y",
    "%d/%m/%y",  # '2006-10-25', '10/25/2006', '10/25/06'
    "%d %b %Y",
    "%d %b, %Y",  # '25 Oct 2006', '25 Oct, 2006'
    "%d %B %Y",
    "%d %B, %Y",  # '25 October 2006', '25 October, 2006'
]

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = "/static/"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": ("rest_framework.authentication.TokenAuthentication",),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.AllowAny",),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 20,
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000

# REPERTOIRE DES FICHIERS
FILES_DIR = BASE_DIR + "/files"
os.makedirs(FILES_DIR, exist_ok=True)

# REPERTOIRE DES FICHIERS
IMAGES_DIR = BASE_DIR + "/files/static/images"
os.makedirs(IMAGES_DIR, exist_ok=True)

# REPERTOIRE DES BACKUP (SAUVEGARDE)
BACKUP_DIR = BASE_DIR + "/files/backup"
os.makedirs(BACKUP_DIR, exist_ok=True)

# REPERTOIRES DE MEDIA
MEDIA_DIR = os.path.join(BASE_DIR, "files/media")
os.makedirs(MEDIA_DIR, exist_ok=True)

# REPERTOIRES DE STATIC
STATIC_DIR = os.path.join(BASE_DIR, "files/static")
os.makedirs(STATIC_DIR, exist_ok=True)

# REPERTOIRES DE TRAITEMENTS
PROCESSING_DIR = os.path.join(BASE_DIR, "files/processing")
os.makedirs(PROCESSING_DIR, exist_ok=True)

# REPERTOIRE DES FICHIERS A EXPORTER
EXPORT_DIR = os.path.join(BASE_DIR, "files/export")
os.makedirs(EXPORT_DIR, exist_ok=True)

# REPERTOIRE DES SORTIES EXCEL
EXCEL_DIR = os.path.join(BASE_DIR, "files/excel")
os.makedirs(EXCEL_DIR, exist_ok=True)

# REPERTOIRE DES IMPRESSION
PRINTING_DIR = os.path.join(BASE_DIR, "files/printing")
os.makedirs(PRINTING_DIR, exist_ok=True)

# REPERTOIRE DES LOGS
LOG_DIR = BASE_DIR + "/files/log"
os.makedirs(LOG_DIR, exist_ok=True)

# REPERTOIRE DES FICHIERS EN ERREUR
ERRORS_DIR = BASE_DIR + "/files/errors"
os.makedirs(ERRORS_DIR, exist_ok=True)

# REPERTOIRE SECURE MEDIA
SECURE_MEDIA_ROOT = os.path.join(BASE_DIR, "files/secure_media")
os.makedirs(SECURE_MEDIA_ROOT, exist_ok=True)

# REPERTOIRE STATIC
path_files = os.path.join(BASE_DIR, "files/static")
os.makedirs(path_files, exist_ok=True)
STATIC_ROOT = os.path.realpath(path_files)

# REPERTOIRES statics
os.makedirs(os.path.join(BASE_DIR, "files/static/admin"), exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, "files/static/css"), exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, "files/static/js"), exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, "files/static/images"), exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, "files/static/fonts"), exist_ok=True)
os.makedirs(os.path.join(BASE_DIR, "files/static/vendor"), exist_ok=True)

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "files/static/admin"),
    os.path.join(BASE_DIR, "files/static/css"),
    os.path.join(BASE_DIR, "files/static/js"),
    os.path.join(BASE_DIR, "files/static/images"),
    os.path.join(BASE_DIR, "files/static/fonts"),
    os.path.join(BASE_DIR, "files/static/vendor"),
]

CRISPY_TEMPLATE_PACK = "semantic-ui"
CRISPY_ALLOWED_TEMPLATE_PACKS = ("uni_form", "bootstrap4", "semantic-ui")

CONTENT_TYPE_EXCEL = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"

CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"

CKEDITOR_CONFIGS = {
    "default": {"toolbar": "basic", "height": 374, "width": 688},
    "basic_ckeditor": {"toolbar": "Basic"},
}
